### functions@kaos:
# Create new kcp package basics need pkgname as argument:
mkpkg() {
    if [ -z "$1" ] || [ -d "./$1" ];then exit 1;fi
    mkdir "$1" && cd "$1" && pckcp -gc && sed -i "s/kaos-pkgbuild-proto/$1/g" PKGBUILD
    echo -e "#$1\n" > README.md
    kate -n README.md PKGBUILD
}

# Update/Create local pacman repo using /etc/makepkg.conf $PKGDEST value and hardlinks them to destination/
# It also support git push if repo detected as a git repo
# Needs existing and writable destination folder as argument or will exit.
pkg2repo() {
if [ $(which qarma) ];then
    [ -n "${1}" ] && [ -d ${1} ] && [ -w ${d} ] || return 1
    Odir="$(pwd)"
    cd ${1} && Dir="$(pwd)" && cd ${Odir} || return 1
    source /etc/makepkg.conf || return 1
    for pkg in $(find $PKGDEST/ -type f -name "*.pkg.tar.xz")
        do  echo "Found: $(basename ${pkg} .pkg.tar.xz)"
    done | sort | qarma --title="Packages To Repo" --window-icon="octopi" \
    --width=800 --height=600 --ok-label="Add to repo" --text-info --checkbox="Add these packages to repo: [$(basename ${1})] (${Dir})?"
    if [ "$?" = "0" ];then
         for pkg in $(find $PKGDEST/ -type f -name "*.pkg.tar.xz")
             do ln -s ${pkg} ${Dir}/$(basename ${pkg})
         done
        repo-add -n -d --nocolor "${Dir}/$(basename ${Dir}).db.tar.xz" $(find ${Dir} -type l -name "*.pkg.tar.xz") 2>&1 | qarma --title="Packages To Repo" --window-icon="octopi" --width=800 --height=600 --text-info --auto-scroll ||  return 1
        repo-add -f --nocolor "${Dir}/$(basename ${Dir}).files.tar.xz" $(find ${Dir} -type l -name "*.pkg.tar.xz") 2>&1 | qarma --title="Packages To Repo" --window-icon="octopi" --width=800 --height=600 --text-info --auto-scroll ||  return 1
    else
        qarma --error --title="Packages To Repo" --window-icon="octopi" --text="Cancelled by user..." --ok-label=Exit --timeout=3
        return 1
    fi
else
        echo "Need Zenity or qarma... Exiting."
        return 1
fi
}

