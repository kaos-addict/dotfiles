### functions@kaos:
# Create new kcp package basics need pkgname as argument:
mkpkg() {
g_hub=git@github.com
api_url="https://api.github.com/user/repos"
_com=".commented" # Comment this and uncomment next line to get uncommented version of files
#_com=""
c=${_com:1:1}
    if [ -n "$1" ] && [ ! -d "./$1" ];then
        _user=$(git config --get user.name)
        curl -u "${_user}" ${api_url}} -d $(echo "'{"name":"XX"}'" | sed "s/XX/$1/") && \
        git clone ${g_hub}:${_user}/$1.git
        [ ! -d "./$1" ] && mkdir -p "$1"
# Get PKGBUILD proto file
        cd "$1" && pckcp -g${c} && sed -i "s/kaos-pkgbuild-proto/$1/g" PKGBUILD
# Get README proto file
        wget https://raw.githubusercontent.com/kaos-addict/kaos-helpers/master/README.md${_com}.kaos.proto -O README.md
    sed -i "s/# NAME/# $1/" > README.md
        kate -n README.md PKGBUILD & return 0
    else echo "No arg given or $1 folder exists, exiting..."
    fi
}

# Update/Create local pacman repo using /etc/makepkg.conf $PKGDEST value and hardlinks them to destination/
# It also support git push if repo detected as a git repo
# Needs existing and writable destination folder as argument or will exit.
pkg2repo() {
if [ $(which qarma) ];then
    [ -n "${1}" ] && [ -d ${1} ] && [ -w ${d} ] || return 1
    Odir="$(pwd)"
    cd ${1} && Dir="$(pwd)" && cd ${Odir} || return 1
    source /etc/makepkg.conf || return 1
    for pkg in $(find $PKGDEST/ -type f -name "*.pkg.tar.xz")
        do  echo "Found: $(basename ${pkg} .pkg.tar.xz)"
    done | sort | qarma --title="Packages To Repo" --window-icon="octopi" \
    --width=800 --height=600 --ok-label="Add to repo" --text-info --checkbox="Add these packages to repo: [$(basename ${1})] (${Dir})?"
    if [ "$?" = "0" ];then
         for pkg in $(find $PKGDEST/ -type f -name "*.pkg.tar.xz")
             do ln -s ${pkg} ${Dir}/$(basename ${pkg})
         done
        repo-add -n -d --nocolor "${Dir}/$(basename ${Dir}).db.tar.xz" $(find ${Dir} -type l -name "*.pkg.tar.xz") 2>&1 | qarma --title="Packages To Repo" --window-icon="octopi" --width=800 --height=600 --text-info --auto-scroll ||  return 1
        repo-add -f --nocolor "${Dir}/$(basename ${Dir}).files.tar.xz" $(find ${Dir} -type l -name "*.pkg.tar.xz") 2>&1 | qarma --title="Packages To Repo" --window-icon="octopi" --width=800 --height=600 --text-info --auto-scroll ||  return 1
    else
        qarma --error --title="Packages To Repo" --window-icon="octopi" --text="Cancelled by user..." --ok-label=Exit --timeout=3
        return 1
    fi
else
        echo "Need Zenity or qarma... Exiting."
        return 1
fi
}

